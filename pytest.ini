[pytest]
# Pytest Configuration for Stock Analysis System
# ===============================================

# Test discovery
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Output options
addopts =
    # Verbose output
    -v
    # Show extra test summary info
    -ra
    # Show local variables in tracebacks
    -l
    # Strict markers
    --strict-markers
    # Coverage options (requires pytest-cov)
    --cov=.
    --cov-report=html
    --cov-report=term-missing
    --cov-report=xml
    # Ignore warnings from third-party libraries
    --disable-warnings
    # Show durations of slowest tests
    --durations=10
    # Parallel execution (requires pytest-xdist)
    # -n auto

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    property: marks tests as property-based tests
    requires_api: marks tests that require API keys
    requires_gpu: marks tests that require GPU

# Coverage options
[coverage:run]
source = .
omit =
    */tests/*
    */venv/*
    */__pycache__/*
    */site-packages/*
    setup.py
    */dashboard/*
    */checkpoints/*
    */data/*
    */reports/*

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code
    def __repr__

    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:
    if TYPE_CHECKING:

    # Don't complain about abstract methods
    @abstractmethod

    # Don't complain about pass statements
    pass

# Minimum coverage threshold
precision = 2
skip_covered = False
skip_empty = True

[coverage:html]
directory = htmlcov
